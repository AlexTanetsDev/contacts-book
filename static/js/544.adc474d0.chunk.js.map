{"version":3,"file":"static/js/544.adc474d0.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.ts","components/greetingBox/GreetingBox.styled.ts","components/homeView/HomeView.styled.ts","components/contactForm/ContactForm.tsx","components/modal/Modal.styled.ts","components/modal/Modal.tsx","redux/contacts/selectors.ts","components/filter/filter.styled.ts","components/filter/filter.tsx","components/contactList/ContactList.styled.ts","components/contactList/ContactList.tsx","pages/ContactsPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  padding: 15px;\n  gap: 15px;\n  align-items: center;\n\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const StyledField = styled.input`\n  border-radius: 15px;\n  outline: none;\n  padding: 2px 40px 2px 15px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  background-color: #e0e0e0;\n  :hover,\n  :focus {\n    outline: 2px solid #60b8ff;\n  }\n\n  @media screen and (max-width: 450px) {\n    max-width: 250px;\n  }\n`;\nexport const SubmitButton = styled.button`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const GreetingWraper = styled.div`\n  position: relative;\n\n  max-width: 350px;\n  min-height: 300px;\n  background-color: #e0e0e0;\n\n  margin: 0 auto;\n  padding: 10px 10px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n\n  @media screen and (min-width: 450px) {\n    max-width: 500px;\n    min-height: 350px;\n\n    padding: 30px 15px;\n    gap: 10px;\n  }\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  justify-content: center;\n\n  background-color: #fff;\n  padding: 15px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const GreetingTitle = styled.h2`\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const GreetingTag = styled.p`\n  font-size: 26px;\n  font-style: italic;\n  font-weight: 600;\n  color: #2c3fe4;\n  text-align: center;\n`;\n\nexport const GreetingBtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const GreetingBtn = styled(NavLink)`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const IconBox = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import styled from \"styled-components\";\n\nexport const ContactsInfo = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const AddContactBtn = styled.button`\n  text-decoration: none;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 24px;\n  background-color: #60b8ff;\n  padding: 5px;\n  width: 250px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n  }\n`;\n\nexport const HomeViewTitleBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n\n  background-color: #fff;\n  padding: 15px 40px;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const AddContactBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  padding-left: 25px;\n  padding-right: 25px;\n`;\n\nexport const ContactInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  max-width: 300px;\n`;\n","import { FC, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  ContactsForm,\n  FormLabel,\n  StyledField,\n  SubmitButton,\n} from \"./ContactForm.styled\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useAppDispatch } from \"../../hooks\";\nimport { addContact } from \"../../redux/contacts/operations\";\n\ninterface IContactFormProps {\n  modalClose: () => void;\n}\nconst nameRegEx = /^[A-Za-zА-Яа-яІіЇїЄєҐґ0-9\\s'-]+$/;\nconst telRegEx =\n  /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s.]{0,1}[0-9]{3}[-\\s.]{0,1}[0-9]{2,4}[-\\s.]{0,1}[0-9]{2,4}$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .min(1, \"Name can't be empty\")\n    .matches(nameRegEx, {\n      message: \"Name can include only letterrs, numbers, '-'\",\n    }),\n  number: yup.string().required().matches(telRegEx, {\n    message: \"Invalid number. Phone number must be 10 integer \",\n  }),\n});\ntype FormData = yup.InferType<typeof schema>;\n\nexport const ContactForm: FC<IContactFormProps> = ({ modalClose }) => {\n  const [isValidName, setIsValidName] = useState(true);\n  const [isValidTel, setIsValidTel] = useState(true);\n  const dispatch = useAppDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormData>({\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = (data: FormData) => {\n    dispatch(addContact(data));\n    modalClose();\n  };\n\n  const handleChange = (value: string) => {\n    if (!nameRegEx.test(value)) {\n      setIsValidName(false);\n      return;\n    }\n    setIsValidName(true);\n  };\n\n  const handleTelChange = (value: string) => {\n    if (!telRegEx.test(value)) {\n      setIsValidTel(false);\n      return;\n    }\n    setIsValidTel(true);\n  };\n  return (\n    <ContactsForm autoComplete=\"off\" onSubmit={handleSubmit(handleFormSubmit)}>\n      <FormLabel htmlFor=\"name\">\n        Name\n        <StyledField\n          style={{\n            outline: isValidName ? \"\" : \"1px solid red\",\n          }}\n          type=\"text\"\n          placeholder=\"Contact Name\"\n          defaultValue=\"\"\n          {...register(\"name\", {\n            onChange: (e) => handleChange(e.target.value),\n          })}\n        />\n        {errors?.name && <p>{errors.name.message}</p>}\n      </FormLabel>\n\n      <FormLabel htmlFor=\"number\">\n        Number\n        <StyledField\n          style={{\n            outline: isValidTel ? \"\" : \"1px solid red\",\n          }}\n          type=\"tel\"\n          placeholder=\"011 22 33 44\"\n          defaultValue=\"\"\n          {...register(\"number\", {\n            onChange: (e) => handleTelChange(e.target.value),\n          })}\n        />\n        {errors?.number && <p>{errors.number.message}</p>}\n      </FormLabel>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </ContactsForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalCloseBtn = styled.button`\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: #60b8ff;\n    color: #fff;\n  }\n`;\n","import { ContactForm } from \"../contactForm/ContactForm\";\nimport { GreetingWraper, IconBox } from \"../greetingBox/GreetingBox.styled\";\nimport { useEffect, FC } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalCloseBtn, Overlay } from \"./Modal.styled\";\nimport {\n  FaTelegram,\n  FaCommentDots,\n  FaEnvelope,\n  FaPhone,\n  FaUserAlt,\n} from \"react-icons/fa\";\nimport { BsXLg } from \"react-icons/bs\";\n\nconst modalRoot = document.querySelector(\"#modal-root\")!;\n\ninterface ImodalProps {\n  modalClose: () => void;\n}\n\nexport const Modal: FC<ImodalProps> = ({ modalClose }) => {\n  useEffect(() => {\n    const hendleKeydown = (e: { code: string }) => {\n      if (e.code === \"Escape\") {\n        modalClose();\n      }\n    };\n\n    window.addEventListener(\"keydown\", hendleKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", hendleKeydown);\n    };\n  }, [modalClose]);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const target = event.target as HTMLDivElement;\n\n    if (target.id !== \"overlay\") return;\n    modalClose();\n  };\n\n  return createPortal(\n    <Overlay onClick={(event) => handleClick(event)} id=\"overlay\">\n      <GreetingWraper>\n        <ModalCloseBtn type=\"button\" onClick={modalClose}>\n          <BsXLg size={30} />\n        </ModalCloseBtn>\n        <ContactForm modalClose={modalClose} />\n        <IconBox>\n          <FaEnvelope color=\"#000000b9\" size={25} />\n          <FaCommentDots color=\"#000000b9\" size={25} />\n          <FaPhone color=\"#000000b9\" size={25} />\n          <FaTelegram color=\"#000000b9\" size={25} />\n          <FaUserAlt color=\"#000000b9\" size={25} />\n        </IconBox>\n      </GreetingWraper>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import type { RootState } from \"../store\";\n\nexport const selectContacts = (state: RootState) => state.contacts.items;\nexport const selectIsloading = (state: RootState) => state.contacts.isLoading;\nexport const selectError = (state: RootState) => state.contacts.error;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\n  border-radius: 15px;\n  outline: none;\n  padding: 2px 10px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  width: 250px;\n  :hover,\n  :focus {\n    outline: 2px solid #60b8ff;\n  }\n\n  @media screen and (min-width: 450px) {\n    width: 350px;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n","import { setFilter } from \"../../redux/filter/filterSlice\";\nimport { useState } from \"react\";\nimport { FilterLabel, StyledInput } from \"./filter.styled\";\nimport { useAppDispatch } from \"../../hooks\";\n\nexport const Filter = () => {\n  const dispatch = useAppDispatch();\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  const handleFilterChange = (e: { target: { value: any } }) => {\n    const value = e.target.value;\n    setFilterValue(value);\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <StyledInput\n        type=\"text\"\n        value={filterValue}\n        onChange={handleFilterChange}\n        placeholder=\"Contact Name\"\n      />\n    </FilterLabel>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  width: 300px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #fff;\n  border-radius: 15px;\n\n  @media screen and (min-width: 450px) {\n    min-width: 400px;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 5px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: #e0e0e0;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n`;\n\nexport const Contact = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n\n  @media screen and (min-width: 450px) {\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const DeleteContactBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: none;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #ec4d1c;\n    color: #fff;\n  }\n`;\n","import {\n  Contact,\n  ContactItem,\n  DeleteContactBtn,\n  List,\n} from \"./ContactList.styled\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\nimport { selectFilter } from \"../../redux/filter/filterSlice\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { FaUsersSlash } from \"react-icons/fa\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\n\nexport const ContactList = () => {\n  const contacts = useAppSelector(selectContacts);\n  const filter = useAppSelector(selectFilter);\n  const dispatch = useAppDispatch();\n\n  const handleClick = (id: number | undefined) => {\n    if (id) dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <List>\n      {getVisibleContacts().map((visibleContact) => {\n        const { _id, name, number } = visibleContact;\n        return (\n          <ContactItem key={_id}>\n            <Contact>\n              {name.toUpperCase()} : {number}\n            </Contact>\n            <DeleteContactBtn type=\"button\" onClick={() => handleClick(_id)}>\n              <FaUsersSlash />\n            </DeleteContactBtn>\n          </ContactItem>\n        );\n      })}\n    </List>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  selectContacts,\n  selectIsloading,\n  selectError,\n} from \"../redux/contacts/selectors\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\nimport { Filter } from \"../components/filter/filter\";\nimport { ContactList } from \"../components/contactList/ContactList\";\nimport { GreetingWraper } from \"../components/greetingBox/GreetingBox.styled\";\nimport { AddContactBtn } from \"../components/homeView/HomeView.styled\";\nimport { Modal } from \"../components/modal/Modal\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { ThreeDots } from \"react-loader-spinner\";\nimport styled from \"styled-components\";\n\nexport default function Contacts() {\n  const contacts = useAppSelector(selectContacts);\n  const isLoading = useAppSelector(selectIsloading);\n  const error = useAppSelector(selectError);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <GreetingWraper>\n      <h1>Phonebook</h1>\n      {isLoading && !error ? (\n        <Loader>\n          <ThreeDots\n            height=\"38\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#60b8ff\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            visible={true}\n          />\n        </Loader>\n      ) : (\n        <AddContactBtn type=\"button\" onClick={toggleModal}>\n          Add contact\n        </AddContactBtn>\n      )}\n\n      {isModalOpen && <Modal modalClose={toggleModal} />}\n      <h2 style={{ textAlign: \"center\" }}>\n        {contacts.length === 0\n          ? \"Here will be your contacts. Add contacts\"\n          : \"Contacts\"}\n      </h2>\n      {contacts.length > 1 && <Filter />}\n\n      {contacts.length !== 0 && <ContactList />}\n    </GreetingWraper>\n  );\n}\n\nconst Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n"],"names":["ContactsForm","styled","form","_templateObject","_taggedTemplateLiteral","FormLabel","label","_templateObject2","StyledField","input","_templateObject3","SubmitButton","button","_templateObject4","GreetingWraper","div","TitleBox","GreetingTitle","h2","GreetingTag","p","GreetingBtnBox","_templateObject5","GreetingBtn","NavLink","_templateObject6","IconBox","_templateObject7","ContactsInfo","AddContactBtn","HomeViewTitleBox","AddContactBox","ContactInfoWrapper","nameRegEx","telRegEx","schema","yup","shape","name","required","min","matches","message","number","ContactForm","_ref","modalClose","_useState","useState","_useState2","_slicedToArray","isValidName","setIsValidName","_useState3","_useState4","isValidTel","setIsValidTel","dispatch","useAppDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","_jsxs","autoComplete","onSubmit","data","addContact","children","htmlFor","_jsx","_objectSpread","style","outline","type","placeholder","defaultValue","onChange","e","value","target","test","Overlay","ModalCloseBtn","modalRoot","document","querySelector","Modal","useEffect","hendleKeydown","code","window","addEventListener","removeEventListener","createPortal","onClick","event","id","handleClick","BsXLg","size","FaEnvelope","color","FaCommentDots","FaPhone","FaTelegram","FaUserAlt","selectContacts","state","contacts","items","selectIsloading","isLoading","selectError","error","StyledInput","FilterLabel","Filter","filterValue","setFilterValue","setFilter","List","ul","ContactItem","li","Contact","DeleteContactBtn","ContactList","useAppSelector","filter","selectFilter","contact","toLowerCase","includes","map","visibleContact","_id","toUpperCase","deleteContact","FaUsersSlash","Contacts","isModalOpen","setIsModalOpen","fetchContacts","toggleModal","Loader","ThreeDots","height","width","radius","ariaLabel","wrapperStyle","visible","textAlign","length"],"sourceRoot":""}